{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Das Parameter-Modul ist der Startpunkt jeder Interaktion. Man kann es sich wie das Bedienpult eines Cockpits vorstellen: Hier legt die Nutzerin oder der Nutzer die Werte fest, mit denen die Simulation arbeitet. Technisch gesehen ist es aber streng auf diese Rolle beschr\'e4nkt. Es zeigt Schieberegler, Eingabefelder oder Buttons an und meldet jede Bewegung oder Eingabe als Ereignis in den Event-Bus. Es rechnet nicht, es koppelt nicht, und es ver\'e4ndert auch nicht selbst die Visualisierungen.\
Damit unterscheidet sich das Parameter-Modul klar von anderen Rollen. Wenn zum Beispiel ein Slider f\'fcr die Infektionsdauer verschoben wird, sendet das Modul lediglich die Nachricht \'84gamma wurde ver\'e4ndert\'93 an den Bus. Alles Weitere \'96 also das Umrechnen in konsistente Parameter, die mathematische Kopplung zu anderen Gr\'f6\'dfen und schlie\'dflich die Berechnung einer neuen Infektionskurve \'96 passiert in den nachgelagerten Modulen. So bleibt das Parameter-Modul sehr leichtgewichtig und wartbar.\
Der didaktische Vorteil liegt darin, dass es sich problemlos an unterschiedliche Zielgruppen anpassen l\'e4sst. Im 
\f1\b School-Modus
\f0\b0  zeigt es nur wenige, stark reduzierte Regler, etwa f\'fcr die Infektionsdauer und f\'fcr Gegenma\'dfnahmen. Werte wie R\uc0\u8320  oder die Bev\'f6lkerungsgr\'f6\'dfe laufen unsichtbar im Hintergrund mit. Im 
\f1\b University-Modus
\f0\b0  hingegen werden alle Parameter sichtbar, und Fachleute k\'f6nnen auch exakte Werte eingeben. Trotzdem bleibt die Schnittstelle f\'fcr beide Zielgruppen dieselbe: Alle Eingaben werden konsequent als standardisierte Events weitergereicht.\
Zusammengehalten wird das Ganze dadurch, dass jedes Parameter-Modul als eigenst\'e4ndiges ECMAScript-Modul organisiert ist und einen eigenen Einstiegspunkt (index.js) besitzt. Dieser Einstiegspunkt kennt nur zwei Aufgaben: die UI an eine bestimmte Stelle im DOM zu h\'e4ngen und bei jeder Interaktion ein Event abzusetzen. Damit erf\'fcllt es genau die Rolle, die in einer modernen ESM-Architektur vorgesehen ist: eine abgeschlossene Einheit, die nach au\'dfen nur \'fcber klar definierte Schnittstellen wirkt.\
}
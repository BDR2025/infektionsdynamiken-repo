Widgets im Detail

Die Widgets sind die sichtbare Bedienoberfläche der Engine, also des Rechenkerns der Anwendung. Sie bilden die Schaltflächen im Kopfbereich der einzelnen Werkzeuge und sorgen dafür, dass Nutzerinnen und Nutzer jederzeit die Kontrolle über Einstellungen und Ansichten behalten. Jedes Widget besitzt einen einheitlichen Kopfbereich, den sogenannten Header. Dieser Bereich enthält den Titel, die Bedienelemente, ein Menü-Symbol mit drei Strichen, das oft Burger Menü genannt wird, sowie den Ein- und Ausschalter. Andere Elemente ordnen sich diesem Aufbau unter. Das System folgt dabei einer einfachen Regel: Pro Widget gibt es genau einen Header, der von allen Modulen respektiert wird.

Innerhalb dieses Rahmens lassen sich die Widgets sehr flexibel gestalten. Auf der linken Seite befinden sich meist Umschalter für die Betriebsarten. Dazu gehören entweder kleine Schalter, die zwischen zwei Zuständen wechseln, oder Segment-Schalter, die wie eine Reihe von Tasten funktionieren und jeweils nur eine Option aktiv lassen. Auf der rechten Seite sind die übergreifenden Bedienelemente zu finden. Hier können Nutzer zum Beispiel zwischen Prozent- und Absolutwerten umschalten oder sich die sogenannte Herdenimmunität einblenden lassen. Über das Menü-Symbol öffnet sich ein zusätzliches Bedienfeld, in dem weitere Optionen als Auswahl- oder Ankreuzfelder erscheinen. Der Ein- und Ausschalter steuert, ob ein Widget aktiv ist oder ob es nur in einem stark reduzierten Mini-Modus angezeigt wird.

Im Hintergrund sorgt eine gemeinsame Logik dafür, dass alle diese Bedienelemente einheitlich arbeiten. Jede Aktion wird in einem klaren Schema beschrieben, das vorgibt, welche Typen von Schaltern erlaubt sind und welche Eigenschaften sie haben müssen. Aus diesen Beschreibungen entstehen standardisierte Objekte, die anschließend in konkrete Schaltflächen übersetzt werden. Die Logik achtet darauf, dass jede Änderung zuverlässig an das Gesamtsystem weitergegeben wird und alle Werte auch im Rechenkern ankommen. Auf diese Weise bleiben Bedienung, Berechnung und Darstellung immer aufeinander abgestimmt.

Eine besondere Rolle spielt dabei die Verwaltung der Menüs. Sie kümmert sich darum, dass zusätzliche Bedienfelder wie Dropdowns oder das Burger Menü korrekt unter dem jeweiligen Symbol erscheinen. Sie verleiht diesen Elementen automatisch die richtigen Attribute für Barrierefreiheit, sorgt dafür, dass sie sich mit der Escape-Taste schließen lassen, und blendet sie bei Größenänderungen oder Klicks außerhalb zuverlässig wieder aus. So bleibt die Bedienung stabil und für alle zugänglich. Ergänzt wird das Ganze durch eine Logik, die festlegt, was im ausgeschalteten Zustand sichtbar bleibt, sowie durch eine Wiederherstellung der letzten Zustände, wenn ein Widget wieder eingeschaltet wird.

Auch die Gestaltung wird zentral gesteuert. Ein Stylesheet setzt die grundlegenden Farben, Größen und Abstände. Schaltflächen im Header sind stets kreisförmig, Segment-Schalter heben die gewählte Option optisch hervor und die Menüs erscheinen in einer klaren, leicht lesbaren Form. Kleine Hilfen wie Kurzinfos, die beim Überfahren mit der Maus oder beim Fokussieren mit der Tastatur erscheinen, machen die Bedienung zusätzlich leichter. Alle diese Details greifen ineinander und schaffen ein einheitliches Bild, das funktional klar und optisch ansprechend ist.

Die Widgets sind damit mehr als nur dekorative Oberflächen. Sie sind die eigentliche Schnittstelle zwischen Nutzer und Rechenkern. Sie bündeln die Eingaben, steuern den Fluss der Parameter und sorgen dafür, dass jede Veränderung unmittelbar sichtbar und steuerbar bleibt. Durch ihre klare Struktur sind sie sowohl für Entwicklerinnen und Entwickler nachvollziehbar als auch für Lernende und Interessierte leicht verständlich. Wer mit der Engine arbeitet, merkt schnell, dass die Widgets nicht nur schmückendes Beiwerk sind, sondern das zentrale Bedienelement, das Oberfläche und Simulation miteinander verbindet.

👉 Hier sind einige Fachwörter kurz erklärt:

Engine = Rechenkern
Header = Kopfbereich
One Header Policy = einfache Regel, ein Header pro Widget
Segmented Switches = Segment-Schalter, wie eine Reihe von Tasten
Toggles = Umschalter zwischen zwei Zuständen
Burger Menü = Menü-Symbol mit drei Strichen
Mini Modus = reduzierter Modus bei ausgeschaltetem Widget
Action Objekte = standardisierte Objekte für Aktionen
Renderer habe ich einfach als „Übersetzung in Schaltflächen“ erklärt
Event Bus und Overlay Hub habe ich zu „Logik“ und „Verwaltung der Menüs“ vereinfacht
Off Policy = Logik für ausgeschaltete Widgets
Rehydrate Modul = Wiederherstellung der letzten Zustände